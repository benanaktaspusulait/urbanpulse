# Clean up existing deployments
kubectl delete deployment kafdrop --ignore-not-found
kubectl delete deployment kafka --ignore-not-found
kubectl delete deployment zookeeper --ignore-not-found

kubectl delete service kafdrop --ignore-not-found
kubectl delete service kafka --ignore-not-found
kubectl delete service zookeeper --ignore-not-found

# Wait for all resources to be deleted
kubectl wait --for=delete pod -l app=kafdrop --timeout=60s
kubectl wait --for=delete pod -l app=kafka --timeout=60s
kubectl wait --for=delete pod -l app=zookeeper --timeout=60s

# Verify all resources are deleted
kubectl get pods
kubectl get services

# Deploy Zookeeper first
kubectl apply -f zookeeper-deployment.yaml

# Wait for Zookeeper to be ready
kubectl wait --for=condition=ready pod -l app=zookeeper --timeout=300s

# Deploy Kafka
kubectl apply -f kafka-deployment.yaml

# Wait for Kafka to be ready
kubectl wait --for=condition=ready pod -l app=kafka --timeout=300s

# Deploy Kafdrop
# Apply RBAC (if not already applied)
kubectl apply -f kafdrop-rbac.yaml

# Apply Deployment
kubectl apply -f kafdrop-deployment.yaml

# Apply Service
kubectl apply -f kafdrop-service.yaml

# Check the status of pods
kubectl get pods

# Check the services
kubectl get services

# Check logs if any pod is not running
kubectl logs -l app=kafka
kubectl logs -l app=zookeeper

# Check Pod Details if needed
kubectl describe pod -l app=kafka

# Port forward Kafdrop UI
kubectl port-forward service/kafdrop 9000:9000

# Delete existing deployments (if any)
kubectl delete -f kafdrop-deployment.yaml --ignore-not-found
kubectl delete -f kafka-deployment.yaml --ignore-not-found
kubectl delete -f zookeeper-deployment.yaml --ignore-not-found

# Wait for all resources to be deleted
kubectl wait --for=delete pod -l app=kafdrop --timeout=60s
kubectl wait --for=delete pod -l app=kafka --timeout=60s
kubectl wait --for=delete pod -l app=zookeeper --timeout=60s

# Deploy Zookeeper first
kubectl apply -f zookeeper-deployment.yaml

# Wait for Zookeeper to be ready
kubectl wait --for=condition=ready pod -l app=zookeeper --timeout=300s

# Deploy Kafka
kubectl apply -f kafka-deployment.yaml

# Wait for Kafka to be ready
kubectl wait --for=condition=ready pod -l app=kafka --timeout=300s

# Deploy Kafdrop
kubectl apply -f kafdrop-deployment.yaml

# Check the status of pods
kubectl get pods

# Check the services
kubectl get services

# Check logs if any pod is not running
kubectl logs -l app=kafka
kubectl logs -l app=zookeeper

# Check Pod Details if needed
kubectl describe pod -l app=kafka

# Port forward Kafdrop UI
kubectl port-forward service/kafdrop 9000:9000

# remove deployments
cd k8s && kubectl delete deployment kafdrop --ignore-not-found && kubectl delete deployment kafka --ignore-not-found && kubectl delete deployment zookeeper --ignore-not-found